[33mcommit 4cf32be5d13d616465c76a8a98f6a73b6e14a896[m
Author: JamesNorris <Jnorris700@gmail.com>
Date:   Thu Jun 14 09:51:39 2012 -0400

    v1.0.0 TEST

[1mdiff --git a/.classpath b/.classpath[m
[1mnew file mode 100644[m
[1mindex 0000000..4f0cf35[m
[1m--- /dev/null[m
[1m+++ b/.classpath[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<classpath>[m
[32m+[m	[32m<classpathentry kind="src" path="src"/>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7"/>[m
[32m+[m	[32m<classpathentry kind="lib" path="C:/Users/James/Minecraft/Eclipse - Plugin Development/bukkit-1.2.5-R4.1-20120613.060146-4.jar">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="javadoc_location" value="http://jd.bukkit.org/apidocs/"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="output" path="bin"/>[m
[32m+[m[32m</classpath>[m
[1mdiff --git a/.project b/.project[m
[1mnew file mode 100644[m
[1mindex 0000000..71e4efc[m
[1m--- /dev/null[m
[1m+++ b/.project[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<projectDescription>[m
[32m+[m	[32m<name>Flow</name>[m
[32m+[m	[32m<comment></comment>[m
[32m+[m	[32m<projects>[m
[32m+[m	[32m</projects>[m
[32m+[m	[32m<buildSpec>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.jdt.core.javabuilder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m	[32m</buildSpec>[m
[32m+[m	[32m<natures>[m
[32m+[m		[32m<nature>org.eclipse.jdt.core.javanature</nature>[m
[32m+[m	[32m</natures>[m
[32m+[m[32m</projectDescription>[m
[1mdiff --git a/.settings/org.eclipse.jdt.core.prefs b/.settings/org.eclipse.jdt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..7341ab1[m
[1m--- /dev/null[m
[1m+++ b/.settings/org.eclipse.jdt.core.prefs[m
[36m@@ -0,0 +1,11 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.targetPlatform=1.7[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve[m
[32m+[m[32morg.eclipse.jdt.core.compiler.compliance=1.7[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.lineNumber=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.localVariable=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.sourceFile=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.assertIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enumIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.source=1.7[m
[1mdiff --git a/bin/com/github/JamesNorris/Flow/Flow.class b/bin/com/github/JamesNorris/Flow/Flow.class[m
[1mnew file mode 100644[m
[1mindex 0000000..165ad2a[m
Binary files /dev/null and b/bin/com/github/JamesNorris/Flow/Flow.class differ
[1mdiff --git a/bin/com/github/JamesNorris/Flow/FlowCommand.class b/bin/com/github/JamesNorris/Flow/FlowCommand.class[m
[1mnew file mode 100644[m
[1mindex 0000000..945ad50[m
Binary files /dev/null and b/bin/com/github/JamesNorris/Flow/FlowCommand.class differ
[1mdiff --git a/bin/com/github/JamesNorris/Flow/FlowFixEffect.class b/bin/com/github/JamesNorris/Flow/FlowFixEffect.class[m
[1mnew file mode 100644[m
[1mindex 0000000..82df13d[m
Binary files /dev/null and b/bin/com/github/JamesNorris/Flow/FlowFixEffect.class differ
[1mdiff --git a/bin/com/github/JamesNorris/Flow/FlowWeatherListener.class b/bin/com/github/JamesNorris/Flow/FlowWeatherListener.class[m
[1mnew file mode 100644[m
[1mindex 0000000..55c45a8[m
Binary files /dev/null and b/bin/com/github/JamesNorris/Flow/FlowWeatherListener.class differ
[1mdiff --git a/plugin.yml b/plugin.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..d777ae9[m
[1m--- /dev/null[m
[1m+++ b/plugin.yml[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32mname: Flow[m
[32m+[m[32mmain: Flow.Flow[m
[32m+[m[32mversion: 1.0.0[m
[32m+[m[32mcommands:[m
[32m+[m[32m   flow info:[m
[32m+[m[32m      description: Shows info on Flow.[m
[32m+[m[32m      usage: /flow info[m
[32m+[m[32m      permission: flow.info[m
[32m+[m[32m      permission-message: You don't have permission to use this command![m
[32m+[m[32m   flow fix:[m
[32m+[m[32m      description: Fixes water without rain.[m
[32m+[m[32m      usage: /flow fix[m
[32m+[m[32m      permission: flow.fix[m
[32m+[m[32m      permission-message: You don't have permission to use this command![m
[32m+[m[32mpermissions:[m
[32m+[m[32m    flow.info[m
[32m+[m[32m        description: Allows player to use "/flow info"[m
[32m+[m[32m        children:[m
[32m+[m[32m            flow.info: true[m
[32m+[m[32m    flow.fix:[m
[32m+[m[32m        description: Allows player to use "/flow fix"[m
[32m+[m[32m        children:[m
[32m+[m[32m            flow.fix: false[m
\ No newline at end of file[m
[1mdiff --git a/src/com/github/JamesNorris/Flow/Flow.java b/src/com/github/JamesNorris/Flow/Flow.java[m
[1mnew file mode 100644[m
[1mindex 0000000..be7203e[m
[1m--- /dev/null[m
[1m+++ b/src/com/github/JamesNorris/Flow/Flow.java[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32mpackage com.github.JamesNorris.Flow;[m
[32m+[m
[32m+[m[32mimport org.bukkit.ChatColor;[m
[32m+[m[32mimport org.bukkit.command.Command;[m
[32m+[m[32mimport org.bukkit.command.CommandSender;[m
[32m+[m[32mimport org.bukkit.plugin.java.JavaPlugin;[m
[32m+[m[32mimport java.util.logging.Logger;[m
[32m+[m
[32m+[m[32mpublic class Flow extends JavaPlugin {[m
[32m+[m[41m	 [m
[32m+[m	[32mLogger log;[m
[32m+[m	[32mprivate FlowCommand myExecutor;[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic void onEnable(){[m
[32m+[m[41m		[m
[32m+[m		[32mmyExecutor = new FlowCommand(this);[m
[32m+[m		[32mgetCommand("fix").setExecutor(myExecutor);[m
[32m+[m[41m		[m
[32m+[m		[32mlog = this.getLogger();[m
[32m+[m		[32mlog.info("Flow has been enabled.");[m
[32m+[m	[32m}[m
[32m+[m[41m		[m
[32m+[m		[32mpublic boolean onCommand(CommandSender info, Command inf, String commandLabel, String[] args){[m
[32m+[m			[32mif(inf.getName().equalsIgnoreCase("flow info")){[m[41m [m
[32m+[m				[32minfo.sendMessage(ChatColor.BLUE + "Flow is a lightweight plugin that helps keep water from forming into streams. Flow changes some flowing water into water spawn blocks during downfall.");[m
[32m+[m				[32mreturn true;[m
[32m+[m			[32m}[m[41m [m
[32m+[m			[32mreturn false;[m[41m [m
[32m+[m		[32m}[m
[32m+[m[41m [m
[32m+[m	[32mpublic void onDisable(){[m
[32m+[m		[32mlog.info("Flow has been disabled.");[m
[32m+[m[41m		[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/com/github/JamesNorris/Flow/FlowCommand.java b/src/com/github/JamesNorris/Flow/FlowCommand.java[m
[1mnew file mode 100644[m
[1mindex 0000000..23e2d8f[m
[1m--- /dev/null[m
[1m+++ b/src/com/github/JamesNorris/Flow/FlowCommand.java[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32mpackage com.github.JamesNorris.Flow;[m
[32m+[m
[32m+[m[32mimport org.bukkit.ChatColor;[m
[32m+[m[32mimport org.bukkit.command.Command;[m
[32m+[m[32mimport org.bukkit.command.CommandExecutor;[m
[32m+[m[32mimport org.bukkit.command.CommandSender;[m
[32m+[m
[32m+[m[32mpublic class FlowCommand implements CommandExecutor {[m
[32m+[m[41m	 [m
[32m+[m	[32mprivate Flow plugin;[m
[32m+[m[41m [m
[32m+[m	[32mpublic FlowCommand(Flow plugin) {[m
[32m+[m		[32mthis.setfix(plugin);[m
[32m+[m	[32m}[m
[32m+[m[41m [m
[32m+[m		[32m@Override[m
[32m+[m		[32mpublic boolean onCommand(CommandSender fixer, Command fix, String commandLabel, String[] args){[m
[32m+[m			[32mif(fix.getName().equalsIgnoreCase("flow fix")){[m[41m [m
[32m+[m				[32mfixer.sendMessage(ChatColor.BLUE + "Fixing server flow...");[m
[32m+[m				[32mreturn true;[m
[32m+[m			[32m}[m[41m [m
[32m+[m			[32mreturn false;[m[41m [m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mpublic Flow getfix() {[m
[32m+[m			[32mreturn plugin;[m
[32m+[m		[32m}[m
[32m+[m
[32m+[m		[32mpublic void setfix(Flow plugin) {[m
[32m+[m			[32mthis.plugin = plugin;[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/com/github/JamesNorris/Flow/FlowFixEffect.java b/src/com/github/JamesNorris/Flow/FlowFixEffect.java[m
[1mnew file mode 100644[m
[1mindex 0000000..785ad00[m
[1m--- /dev/null[m
[1m+++ b/src/com/github/JamesNorris/Flow/FlowFixEffect.java[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32mpackage com.github.JamesNorris.Flow;[m
[32m+[m
[32m+[m[32mimport org.bukkit.block.Block;[m
[32m+[m[32mimport org.bukkit.block.BlockFace;[m
[32m+[m[32mimport org.bukkit.event.Cancellable;[m
[32m+[m[32mimport org.bukkit.event.HandlerList;[m
[32m+[m[32mimport org.bukkit.event.block.BlockEvent;[m
[32m+[m
[32m+[m		[32mpublic class FlowFixEffect extends BlockEvent implements Cancellable{//BlockFromToEvent[m
[32m+[m			[32mprivate static final HandlerList handlers = new HandlerList();[m
[32m+[m			[32mprotected Block to;[m
[32m+[m			[32mprotected BlockFace face;[m
[32m+[m			[32mprotected boolean cancel;[m
[32m+[m			[32mpublic FlowFixEffect(final Block block, final BlockFace face){[m
[32m+[m				[32msuper(block);[m
[32m+[m				[32mthis.face = face;[m
[32m+[m				[32mthis.cancel = false;[m
[32m+[m			[32m}[m
[32m+[m			[32mpublic FlowFixEffect(final Block block, final Block toBlock){[m
[32m+[m				[32msuper(block);[m
[32m+[m				[32mthis.to = toBlock;[m
[32m+[m				[32mthis.face = BlockFace.SELF;[m
[32m+[m				[32mthis.cancel = false;[m
[32m+[m			[32m}[m
[32m+[m			[32mpublic BlockFace getFace(){[m
[32m+[m				[32mreturn face;[m
[32m+[m			[32m}[m
[32m+[m			[32mpublic Block getToBlock(){[m
[32m+[m				[32mif (to == null){[m
[32m+[m					[32mto = block.getRelative(face);[m
[32m+[m				[32m}[m
[32m+[m				[32mreturn to;[m
[32m+[m			[32m}[m
[32m+[m			[32mpublic boolean isCancelled() {[m
[32m+[m				[32mreturn cancel;[m
[32m+[m			[32m}[m
[32m+[m			[32mpublic void setCancelled(boolean cancel) {[m
[32m+[m				[32mthis.cancel = cancel;[m[41m	[m
[32m+[m			[32m}[m
[32m+[m			[32m@Override[m
[32m+[m			[32mpublic HandlerList getHandlers() {[m
[32m+[m				[32mreturn handlers;[m
[32m+[m			[32m}[m
[32m+[m			[32mpublic static HandlerList getHandlerList(){[m
[32m+[m				[32mreturn handlers;[m
[32m+[m			[32m}[m
[32m+[m[41m		[m
[32m+[m		[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/com/github/JamesNorris/Flow/FlowWeatherListener.java b/src/com/github/JamesNorris/Flow/FlowWeatherListener.java[m
[1mnew file mode 100644[m
[1mindex 0000000..bf93633[m
[1m--- /dev/null[m
[1m+++ b/src/com/github/JamesNorris/Flow/FlowWeatherListener.java[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mpackage com.github.JamesNorris.Flow;[m
[32m+[m
[32m+[m[32mimport org.bukkit.World;[m
[32m+[m[32mimport org.bukkit.event.Cancellable;[m
[32m+[m[32mimport org.bukkit.event.HandlerList;[m
[32m+[m[32mimport org.bukkit.event.weather.WeatherEvent;[m
[32m+[m
[32m+[m[32mpublic class FlowWeatherListener extends WeatherEvent implements Cancellable{[m
[32m+[m	[32mprivate static final HandlerList handlers = new HandlerList();[m
[32m+[m	[32mprivate final boolean to;[m
[32m+[m	[32mprivate boolean canceled;[m
[32m+[m[41m	[m
[32m+[m	[32mpublic FlowWeatherListener(final World world, final boolean to){[m
[32m+[m		[32msuper(world);[m
[32m+[m		[32mthis.to = to;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic boolean isCancelled(){[m
[32m+[m		[32mreturn canceled;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic void setCancelled(boolean cancel){[m
[32m+[m		[32mcanceled = cancel;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic boolean toWeatherState(){[m
[32m+[m		[32mreturn to;[m
[32m+[m	[32m}[m
[32m+[m	[32m@Override[m
[32m+[m	[32mpublic HandlerList getHandlers() {[m
[32m+[m		[32mreturn handlers;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic static HandlerList getHandlerList(){[m
[32m+[m		[32mreturn handlers;[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
